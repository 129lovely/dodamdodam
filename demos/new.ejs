<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>avatar-dance</title>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="/demos/css/common.css" />
    <link rel="stylesheet" href="/demos/css/3makeconference.css" />
  </head>

  <body>
    <!-- 안내멘트 -->
    <h1><span><%= username %></span><span> 님 반갑습니다!</span></h1>
    
    <!-- 영상-신원확인영상 -->
    <div class="wrap container">
      <div class="two-peace d-flex justify-content-center">
        <video id="video" width="350" height="260" autoplay="true"></video>
      </div>

      <div class="d-none">
        <canvas id="canvas" width="350" height="260"></canvas>
      </div>

      <!-- <button id="btn-camera">1. 비디오출력</button> -->
      <!-- <button id="btn-capture">2. 캡쳐</button> -->

      <!-- 캡쳐한 이미지 -->
      <!-- <div id="output">
        <div id="images"></div>
      </div> -->
	</div>
	
    <!-- 회의 준비 완료 멘트 -->
    <h2>회의 준비 완료</h2>
    <!-- 회의링크 -->
  <h3><span>회의 ID: <%= roomid %></span></h>
    <!-- 회의참가버튼 -->
    
      <div class="mx-auto mt-3 dd-pbtn mb-3">
        <button
          class="mx-auto btn btn-warning rounded-pill"
          type="button"
		  id="button-addon2"
		 onclick="location.href='/room?roomid=<%= roomid %>&username=<%= username %>&userid=<%= userid %>'"
        >
          <span>지금 참가하기</span>
        </button>
      </div>
	

	<!-- javascript library -->
    <script src="/demos/js/jquery-1.12.4.min.js"></script>
    <script src="/dist/RTCMultiConnection.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
	<script>
		
      // 비디오 처리
      $(function () {
        navigator.getUserMedia =
          navigator.getUserMedia ||
          navigator.webkitGetUserMedia ||
          navigator.mozGetUserMedia;

        const videoEl = document.getElementById("video");
        const canvasEl = document.getElementById("canvas");
        const width = 350;
        const height = 260;

        videoEl.width = width;
        videoEl.height = height;

        // 비디오 가져오기 시작
        navigator.getUserMedia(
          { audio: false, video: true },
          (stream) => {
            // 카메라 연결 성공
            videoEl.srcObject = stream;
          },
          (err) => {
            // 카메라 연결 실패
            console.log("error", arguments);
          }
        );

        /**
         * 비디오 이미지 캡쳐 및 서버 전송
         */
        function capture() {
          // canvas에 그리기 위한 context(그리기, 이미 넣는 객체/메소드/속성 제공)
          const context = canvasEl.getContext("2d");
          // 이미지를 canvas에 넣기
          context.drawImage(videoEl, 0, 0, width, height);

          // todo-서버 전송
          const captured_img = canvasEl.toDataURL("image/png");
        }
      });
	</script>
  </body>
</html>
